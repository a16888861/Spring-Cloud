spring:
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        enabled: true
        # 分组名称
        group: kali-group
        # 集群名称
        cluster-name: kali
        instance-enabled: true
        # nacos命名空间
      #                namespace: 2826f609-db65-46e5-b14b-41cbfc3201b3
      config:
        prefix: ${spring.application.name}
        name: ${spring.application.name}
        # 是否开启
        enabled: false
        # 是否开启自动刷新
        refresh-enabled: true
        # config地址
        server-addr: 127.0.0.1:8848
        # nacos命名空间
    #                namespace: 2826f609-db65-46e5-b14b-41cbfc3201b3
    sentinel:
      transport:
        #配置Sentin dashboard地址
        dashboard: localhost:8849
        # 默认8719端口，假如被占用了会自动从8719端口+1进行扫描，直到找到未被占用的端口
        port: 8719
    gateway:
      discovery:
        locator:
          #表明gateway开启服务注册和发现的功能
          enabled: true
          #是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了），比如以/service-hi/*的请求路径被路由转发到服务名为service-hi的服务上。
          lowerCaseServiceId: true
      routes:
        - id: 用户模块
          # lb代表从注册中心获取服务(负载均衡)
          uri: lb://lk-userinfo
          # 数字越小，优先级越高
          order: 2
          #断言,路径相匹配的进行路由。注意是Path的P是大写
          predicates:
            - Path=/userinfo/**,/access/**
            # Method 方法谓词，这里是匹配 GET 和 POST 请求
            - Method=GET,POST,PUT,DELETE
          #          # 过滤器，请求在传递过程中可以通过过滤器对其进行一定的修改(转发之前去掉1层路径)
          filters:
            - SwaggerHeaderFilter
            - StripPrefix=1
        #            - PreserveHostHeader
        - id: 用户文章模块
          # lb代表从注册中心获取服务(负载均衡)
          uri: lb://lk-article
          # 数字越小，优先级越高
          order: 2
          #断言,路径相匹配的进行路由。注意是Path的P是大写
          predicates:
            - Path=/article/**
            # Method 方法谓词，这里是匹配 GET 和 POST 请求
            - Method=GET,POST,PUT,DELETE
          # 过滤器，请求在传递过程中可以通过过滤器对其进行一定的修改(转发之前去掉1层路径)
          filters:
            - SwaggerHeaderFilter
            - StripPrefix=1
        #            - PreserveHostHeader
        - id: 服务消费者模块
          # lb代表从注册中心获取服务(负载均衡)
          uri: lb://lk-consumer
          # 数字越小，优先级越高
          order: 2
          #断言,路径相匹配的进行路由。注意是Path的P是大写
          predicates:
            - Path=/consumer/**
            # Method 方法谓词，这里是匹配 GET 和 POST 请求
            - Method=GET,POST,PUT,DELETE
          # 过滤器，请求在传递过程中可以通过过滤器对其进行一定的修改(转发之前去掉1层路径)
          filters:
            - SwaggerHeaderFilter
            - StripPrefix=1
      #            - PreserveHostHeader
      # httpClient 连接超时控制
      httpclient:
        connect-timeout: 6000
        response-timeout: 10s
        # 代理方式
        proxy:
          type: http
  messages:
    encoding: UTF-8
    basename: i18n.message
server:
  port: 7000